{
  "_args": [
    [
      {
        "raw": "express-pagination-middleware",
        "scope": null,
        "escapedName": "express-pagination-middleware",
        "name": "express-pagination-middleware",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "G:\\school_rankings_development"
    ]
  ],
  "_from": "express-pagination-middleware@latest",
  "_id": "express-pagination-middleware@1.0.2",
  "_inCache": true,
  "_location": "/express-pagination-middleware",
  "_nodeVersion": "4.6.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/express-pagination-middleware-1.0.2.tgz_1477672768110_0.4119133222848177"
  },
  "_npmUser": {
    "name": "nikoskalogridis",
    "email": "nikos.kalogridis@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-pagination-middleware",
    "scope": null,
    "escapedName": "express-pagination-middleware",
    "name": "express-pagination-middleware",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-pagination-middleware/-/express-pagination-middleware-1.0.2.tgz",
  "_shasum": "be987d7ad0c64507771ac3d1757ecc0586df1513",
  "_shrinkwrap": null,
  "_spec": "express-pagination-middleware",
  "_where": "G:\\school_rankings_development",
  "author": {
    "name": "Nikos Kalogridis"
  },
  "bugs": {
    "url": "https://github.com/nikoskalogridis/express-pagination-middleware/issues"
  },
  "dependencies": {},
  "description": "Express pagination middleware module",
  "devDependencies": {
    "jslint": "^0.10.3",
    "tape": "^4.6.2"
  },
  "directories": {},
  "dist": {
    "shasum": "be987d7ad0c64507771ac3d1757ecc0586df1513",
    "tarball": "https://registry.npmjs.org/express-pagination-middleware/-/express-pagination-middleware-1.0.2.tgz"
  },
  "gitHead": "9af63a2c9b1b5b391a739e945228e7982f79867d",
  "homepage": "https://github.com/nikoskalogridis/express-pagination-middleware#readme",
  "keywords": [
    "pagination",
    "express",
    "middleware"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "nikoskalogridis",
      "email": "nikos.kalogridis@gmail.com"
    }
  ],
  "name": "express-pagination-middleware",
  "optionalDependencies": {},
  "readme": "# express-pagination-middleware\n[![GitHub release](https://img.shields.io/github/release/nikoskalogridis/express-pagination-middleware.svg)]()\n[![Build Status](https://travis-ci.org/nikoskalogridis/express-pagination-middleware.svg?branch=master)](https://travis-ci.org/nikoskalogridis/express-pagination-middleware)\n[![npm](https://img.shields.io/npm/dt/express-pagination-middleware.svg)]()\n[![npm](https://img.shields.io/npm/l/express-pagination-middleware.svg)]()\n\nThis module exports a **function** that takes a configuration object parameter with the following\nproperties:\n\n```\n{\n    sort: {\n        validKeys: Array of strings (case sensitive),\n        default: String (optional, by default assigned to the first element of the\n                    validKeys array with ascending sorting order unless prefixed by a \"-\")\n    },\n    limit: {\n        min: number (optional, default: 5),\n        max: number (optional, default: 100),\n        default: number (optional, defaults to min)\n    }\n}\n```\n\nand returns an **express compatible middleware** `function (req, res, next)` that parses the following\nparameters from the req.query object and sets an object on the req.pagination having the following\nproperties:\n\n```\n{\n    sort: Object - with keys for the sort value fields and value a boolean denoting ascending order\n                   or not\n    limit: number - the limit of records to return (if not specified a default value from the\n                    configuration object is used)\n    skip: number - the number of records to return (if not specified this property has a 0 value)\n}\n```\n\n### Use it\n\nTo use this module first install it in your project using *npm*\n\n```\nnpm install --save express-pagination-middleware\n```\n\nthen in your express application\n\n```javascript\n...\nvar paginationMiddleware = require(\"express-pagination-middleware\");\nvar userPaginationMiddleware = paginationMiddleware({\n    sort: {\n        validKeys: [\"created\", \"age\", \"email\"]\n    },\n    limit: {\n        min: 10,\n        max: 500\n    }\n});\n\n// matching the url http://.../users?sort=created&limit=20&skip=40\nrouter.get(\"/users\", usersPaginationMiddleware, function (req, res, next) {\n    // now the req parameter will have pagination property with all the required info\n    // req.pagination = {\n    //     sort: {\n    //         created: true\n    //     },\n    //     limit: 20,\n    //     skip: 40\n    // }\n    Users\n      .find()\n      .sort(req.pagination.sort)\n      .skip(req.pagination.skip)\n      .limit(req.pagination.limit)\n      .exec()\n      .then(res.json.bind(res))\n      .catch(next);\n}\n````\n\n### Contributing\n\nFeel free to contribute to this project but please open pull requests only on the **development** branch and make sure you include tests for new functionality or issues identified with the codebase.\n\n**All PR's should pass the test build to be considered for merging.**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nikoskalogridis/express-pagination-middleware.git"
  },
  "scripts": {
    "test": "node node_modules/jslint/bin/jslint.js --edition=latest '**/*.js' && node test/paginationMiddleware.js"
  },
  "version": "1.0.2"
}
